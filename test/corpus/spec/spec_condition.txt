====
spec_condition aborts_if
====

spec fun assert_caller_aborts_with_logical_error {
  aborts_if [assert] x == 0 with 43;
};

----

(source_file
  (spec_block
    target: (spec_block_target
      (function_identifier))
    body: (spec_body
      (spec_condition
        kind: (kind)
        condition_properties: (condition_properties
          (spec_property
            (identifier)))
        exp: (binary_expression
          lhs: (name_expression
            access: (identifier))
          operator: (binary_operator)
          rhs: (num_literal))
        additional_exp: (num_literal)))))

====
spec_condition aborts_with and modifies
====


spec fun aborts_with_mixed {
  aborts_with 1,2;
  modifies addr1,addr2;
};

----

(source_file
  (spec_block
    target: (spec_block_target
      (function_identifier))
    body: (spec_body
      (spec_condition
        kind: (kind)
        additional_exp: (num_literal)
        additional_exp: (num_literal))
      (spec_condition
        kind: (kind)
        additional_exp: (name_expression
          access: (identifier))
        additional_exp: (name_expression
          access: (identifier))))))
